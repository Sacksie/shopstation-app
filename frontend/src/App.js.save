nano src/App.jsimport React, { useState } from 'react'; import { ShoppingCart, Search, Star, PoundSterling } from 'lucide-react'; npm start const App = () => {
  const [groceryList, setGroceryList] = useState('');
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const [results, setResults] = useState(null);

  const handleAnalyze = async () => {
    if (!groceryList.trim()) return;
    
    setIsAnalyzing(true);
    
    try {
      // Parse the grocery list
      const items = groceryList.split('\n')
        .map(item => item.trim())
        .filter(item => item.length > 0);
      
      // Call our real backend API
      const response = await fetch('https://grocery-backend-production-5c7e.up.railway.app/api/compare-groceries', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ groceryList: items })
      });
      
      const data = await response.json();
      
      if (data.success) {
        setResults(data);
      } else {
        console.error('API Error:', data.error);
        alert('Error comparing groceries: ' + data.error);
      }
      
    } catch (error) {
      console.error('Network Error:', error);
      alert('Error connecting to server. Make sure your backend is running!');
    }
    
    setIsAnalyzing(false);
  };

  const getBadgeColor = (index) => {
    switch(index) {
      case 0: return 'bg-green-100 text-green-800';
      case 1: return 'bg-blue-100 text-blue-800';
      default: return 'bg-yellow-100 text-yellow-800';
    }
  };

  const getBadgeText = (index, store) => {
    if (index === 0) return 'CHEAPEST';
    if (store.rating >= 4.2) return 'BEST QUALITY';
    return 'GOOD OPTION';
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-blue-50">
      {/* Header */}
      <header className="bg-green-600 shadow-lg border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-2">
              <ShoppingCart className="h-8 w-8 text-green-600" />
              <h1 className="text-2xl font-bold text-white">ShopStation</h1>
            </div>
            <div className="flex items-center space-x-4">
              <button className="text-white hover:text-green-200">Sign In</button>
              <button className="bg-white text-green-600 px-4 py-2 rounded-lg hover:bg-green-50 font-semibold">
                Get Started
              </button>
            </div>
          </div>
        </div>
      </header>

      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Hero Section */}
        <div className="text-center mb-8">
          <h2 className="text-5xl font-bold text-gray-900 mb-4 bg-gradient-to-r from-green-600 to-green-800 bg-clip-text text-transparent">
  Your Smart Shopping Assistant
</h2>
          <p className="text-xl text-gray-600 mb-8">
            Your Smart Shopping Assistant - Find the best deals across UK supermarkets in seconds ‚ö°
          </p>
        </div>

        {/* Input Section */}
        <div className="bg-white rounded-lg shadow-lg p-6 mb-8">
          <h3 className="text-lg font-semibold mb-4">Enter Your Grocery List</h3>
          <textarea
            value={groceryList}
            onChange={(e) => setGroceryList(e.target.value)}
            placeholder="Paste your grocery list here, one item per line:&#10;&#10;Milk&#10;Bread&#10;Eggs&#10;Bananas"
            className="w-full h-40 p-4 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent resize-none"
          />
          <div className="flex justify-between items-center mt-4">
            <p className="text-sm text-gray-500">
              {groceryList.split('\n').filter(line => line.trim()).length} items entered
            </p>
            <button
              onClick={handleAnalyze}
              disabled={!groceryList.trim() || isAnalyzing}
              className="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed flex items-center space-x-2"
            >
              {isAnalyzing ? (
                <>
                  <div className="animate-spin h-4 w-4 border-2 border-white border-t-transparent rounded-full"></div>
                  <span>Analyzing...</span>
                </>
              ) : (
                <>
                  <Search className="h-4 w-4" />
                  <span>Compare Prices</span>
                </>
              )}
            </button>
          </div>
        </div>

        {/* Results Section */}
        {results && (
          <div className="space-y-6">
            <div className="text-center">
              <h3 className="text-2xl font-bold text-gray-900 mb-2">
                Comparison Results for {results.totalItems} items
              </h3>
              <p className="text-gray-600">Powered by your real backend API!</p>
            </div>

            <div className="grid gap-6">
              {results.stores.map((store, index) => (
                <div key={store.name} className="bg-red rounded-xl shadow-xl border border-gray-100 p-6 relative hover:shadow-2xl transition-all duration-300">
                  <div className={`absolute top-4 right-4 px-4 py-2 rounded-full text-sm font-bold shadow-lg ${getBadgeColor(index)}`}>
                    {getBadgeText(index, store)}
                  </div>
                  
                  <div className="flex items-center justify-between mb-4">
                    <div className="flex items-center space-x-3">
                      <span className="text-4xl">{store.logo}</span>
                      <div>
                        <h4 className="text-xl font-semibold">{store.name}</h4>
                        <div className="flex items-center space-x-2 text-sm text-gray-600">
                          <div className="flex items-center space-x-1">
                            <Star className="h-4 w-4 text-yellow-400" />
                            <span>{store.rating}/5 quality rating</span>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    <div className="text-right">
<div className="text-4xl font-bold text-green-600 bg-green-50 px-4 py-2 rounded-lg inline-block">
  ¬£{store.totalPrice.toFixed(2)}
</div>
                      {store.savings !== 0 && (
                        <div className="text-sm font-medium text-red-600 bg-red-50 px-3 py-1 rounded-full inline-block mt-2">
                          +¬£{Math.abs(store.savings).toFixed(2)} more
                        </div>
                      )}
                      {store.savings === 0 && (
                        <div className="text-sm font-medium text-green-600 bg-green-100 px-3 py-1 rounded-full inline-block mt-2">
                          üí∞ Best Value
                        </div>
                      )}
                    </div>
                  </div>

                  <div className="border-t pt-4">
                    <h5 className="font-semibold text-gray-800 mb-4 text-lg3">üìù Your Shopping List:</h5>
                    <div className="grid grid-cols-1 gap-3">
                      {store.items.map((item, idx) => (
                        <div key={idx} className="flex justify-between items-center py-3 px-4 bg-gradient-to-r from-gray-50 to-gray-100 rounded-lg border border-gray-200">
                          <span className="text-sm">{item.name}</span>
                          <span className="font-medium text-green-600">¬£{item.price.toFixed(2)}</span>
                        </div>
                      ))}
                    </div>
                  </div>

                  <div className="mt-4 pt-4 border-t">
                    <button className="w-full bg-gradient-to-r from-green-600 to-green-700 text-white py-3 px-6 rounded-xl hover:from-green-700 hover:to-green-800 transition-all duration-300 
font-semibold text-lg shadow-lg hover:shadow-xl">
                     üõí  Shop at {store.name} ‚Üí
                    </button>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Features Section */}
        <div className="mt-16 grid grid-cols-1 md:grid-cols-3 gap-8">
          <div className="text-center">
            <PoundSterling className="h-12 w-12 text-green-600 mx-auto mb-4" />
            <h3 className="text-lg font-semibold mb-2">Best UK Prices</h3>
            <p className="text-gray-600">Compare prices in pounds across major supermarkets</p>
          </div>
          <div className="text-center">
            <Star className="h-12 w-12 text-green-600 mx-auto mb-4" />
            <h3 className="text-lg font-semibold mb-2">Quality Ratings</h3>
            <p className="text-gray-600">Compare stores by quality and price</p>
          </div>
          <div className="text-center">
            <Search className="h-12 w-12 text-green-600 mx-auto mb-4" />
            <h3 className="text-lg font-semibold mb-2">Smart Analysis</h3>
            <p className="text-gray-600">Intelligent product matching</p>
          </div>
        </div>
      </div>
    </div>
   );
};

export default App;
